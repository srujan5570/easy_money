rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isCurrentUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // App settings rules
    match /app_settings/{document} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // User profile rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create, update: if isCurrentUser(userId);
    }
    
    // Referrals collection rules
    match /referrals/{referralId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.referrerId ||
        request.auth.uid == resource.data.refereeId
      );
      allow create: if isAuthenticated() &&
        (request.auth.uid == request.resource.data.refereeId) &&
        exists(/databases/$(database)/documents/users/$(request.resource.data.referrerId)) &&
        request.resource.data.status == 'completed' &&
        request.resource.data.createdAt == request.time;
      allow update: if false; // Referral records are immutable
      allow delete: if false; // Referral records cannot be deleted
    }
    
    // Transaction rules
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && 
                   get(/databases/$(database)/documents/transactions/$(transactionId)).data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
                     request.resource.data.userId == request.auth.uid &&
                     request.resource.data.status == 'pending';
      allow update: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid &&
                     request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']);
    }
  }
} 